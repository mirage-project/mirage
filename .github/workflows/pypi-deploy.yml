name: PyPI Deploy

on:
  workflow_dispatch:
    
permissions:
  contents: read
  id-token: write

jobs:
  build-n-publish:
    name: Build and publish Python distributions to PyPI
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Free space on runner
      run: .github/workflows/helpers/free_space_on_runner.sh
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: .github/workflows/helpers/install_dependencies.sh
    
    - name: Set up CUDA
      id: cuda-toolkit
      uses: Jimver/cuda-toolkit@v0.2.16
      with:
        cuda: '12.1.1'
        use-github-cache: "false"
    
    - name: Setup environment variables
      run: .github/workflows/helpers/set_env.sh
    
    - name: Build source package
      run: |
        python -m build --sdist --outdir dist/ .

    - name: Publish to Test PyPI
      if: ${{ vars.DEPLOY_TO_TEST_PYPI == 'true' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

    - name: Publish to PyPI
      if: ${{ vars.DEPLOY_TO_TEST_PYPI == 'false' }}
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Get package version
      if: ${{ vars.DEPLOY_TO_TEST_PYPI == 'false' }}
      run: |
        version=$(python -c "import os; exec(open('python/mirage/version.py').read()); print(__version__)")
        echo "PY_VERSION=${version}" >> $GITHUB_ENV
        echo "Package version: ${version}"

    - name: Create Git tag
      if: ${{ vars.DEPLOY_TO_TEST_PYPI == 'false' }}
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.MIRAGE_TOKEN }}
        custom_tag: ${{ env.PY_VERSION }} 